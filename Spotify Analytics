# For this project, I downloaded Spotify data from Kaggle. 
# Then I created a table to insert Spotify data into. 
# Finally, I performed analytics on the data using SQL. 

# Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# Then I inserted the Spotify Data .csv into the table. 

# Next, I explored the data using the following SQL.

# First, I determined how many songs Bad Bunny released, and the name of those songs.
SELECT COUNT(track_name) as total_songs, GROUP_CONCAT(track_name)
FROM BIT_DB.Spotifydata
WHERE artist_name = "Bad Bunny";

# Then, I determined the average popularity and duration for Olivia Rodrigo's songs.
SELECT AVG(popularity), AVG(duration_ms)
 FROM BIT_DB.Spotifydata
 WHERE artist_name = "Olivia Rodrigo";

# Next, I explored who the top 10 artists are based on popularity. 
 SELECT artist_name, popularity
 FROM BIT_DB.Spotifydata
 ORDER BY popularity desc
 LIMIT 10;

# I determined who released the longest song.
SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

# Then, I determined the average danceability for the 10 most popular songs.
SELECT AVG(danceability), popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name
Order by popularity desc
LIMIT 10;

# Lastly, I determined the average danceability by artist and track. 
SELECT AVG(danceability), track_name, artist_name
FROM BIT_DB.Spotifydata
GROUP BY track_name, artist_name;
